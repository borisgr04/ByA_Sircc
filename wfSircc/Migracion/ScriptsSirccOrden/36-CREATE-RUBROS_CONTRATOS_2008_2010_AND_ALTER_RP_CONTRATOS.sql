ALTER TABLE RP_CONTRATOS
 ADD (NRO_CDP  VARCHAR2(10));


COMMENT ON TABLE RP_CONTRATOS IS 'REGISTROS PRESUPESUESTALES DEL CONTRATO';

COMMENT ON COLUMN RP_CONTRATOS.NRO_RP IS 'NRO DEL RP';

COMMENT ON COLUMN RP_CONTRATOS.COD_CON IS 'CODIGO CONTRATO';

COMMENT ON COLUMN RP_CONTRATOS.FEC_RP IS 'FECHA DEL RP';

COMMENT ON COLUMN RP_CONTRATOS.VIGENCIA IS 'VIGENCIA DEL RP';

COMMENT ON COLUMN RP_CONTRATOS.VAL_RP IS 'VALOR DEL RP';

COMMENT ON COLUMN RP_CONTRATOS.VAL_PAGO IS 'VALOR PAGADO';

COMMENT ON COLUMN RP_CONTRATOS.NRO_CDP IS 'NRO DEL CDP';

ALTER TABLE RP_CONTRATOS
 ADD CONSTRAINT RP_CONTRATOS_CDP 
 FOREIGN KEY (NRO_CDP, COD_CON) 
 REFERENCES CDP_CONTRATOS (NRO_CDP, COD_CON);
 
 COMMIT;


-- 0. trasladar registro sin rp
ALTER TABLE RUBROS_CONTRATOS ADD (Vigencia NUMBER(4), id number);
update RUBROS_CONTRATOS set vigencia=SUBSTR(COD_CON,0,4);
COMMIT;

CREATE TABLE RUBROS_CONTRATOS_2008_2010 AS select * from rubros_contratos WHERE NRO_RP IS NULL;

DELETE FROM RUBROS_CONTRATOS WHERE NRO_RP IS NULL;
COMMIT;

-- 1. creata tabla igual vacia

CREATE TABLE RUBROS_CONTRATOS_T AS
select * from rubros_contratos WHERE 1=0;

--- 3. SE PASAN LOS DATOS SIN REPETICIONDE DE LA TABLA ORIGINAR A LA TABLA TEMPORAL

DECLARE
   i   NUMBER := 1;
   n   NUMBER := 0;
BEGIN
   FOR rg IN (SELECT   *
                  FROM rubros_contratos
              ORDER BY fec_reg)
   LOOP
      -- VERIFICAR SI EXISTE
      SELECT COUNT (*)
        INTO n
        FROM rubros_contratos_t
       WHERE cod_rub = rg.cod_rub
         AND cod_con = rg.cod_con
         AND nro_rp = rg.nro_rp;


      IF n = 0
      THEN
         INSERT INTO rubros_contratos_t (cod_rub, cod_con, nom_rub, val_compromiso, nro_rp, fec_reg, usbd, vigencia, ID)
         values (rg.cod_rub, rg.cod_con, rg.nom_rub, rg.val_compromiso, rg.nro_rp, rg.fec_reg, rg.usbd, rg.vigencia,i);
         COMMIT;
         i := i + 1;         
      END IF;
   END LOOP;
   COMMIT; 
END;



--- BORRAR DATOS DE LA TABLA ORIGINAL
DELETE FROM rubros_contratos;
   
--- PASAR DATOS DE LA TABLA SIN REGISTROS REPETIDOS
INSERT INTO rubros_contratos (cod_rub, cod_con, nom_rub, val_compromiso, nro_rp, fec_reg, usbd, vigencia, ID)
SELECT cod_rub, cod_con, nom_rub, val_compromiso, nro_rp, fec_reg, usbd, vigencia, ID FROM rubros_contratos_t; 
      
COMMIT;

ALTER TABLE RUBROS_CONTRATOS ADD CONSTRAINT RUBROS_CONTRATOS_PK PRIMARY KEY (ID);

DROP TABLE RUBROS_CONTRATOS_T; 

COMMIT;


 CREATE TABLE RUBROS_CONTRATOS_X AS(
 SELECT * FROM RUBROS_CONTRATOS WHERE (VIGENCIA, COD_CON, NRO_RP) NOT IN 
 (SELECT VIGENCIA, COD_CON, NRO_RP From RP_CONTRATOS)
 );
 
 DELETE(SELECT * FROM RUBROS_CONTRATOS WHERE (VIGENCIA, COD_CON, NRO_RP) NOT IN 
 (SELECT VIGENCIA, COD_CON, NRO_RP From RP_CONTRATOS));
 
 COMMIT;
 
 ALTER TABLE RP_CONTRATOS
 DROP PRIMARY KEY CASCADE;
 DROP INDEX RP_CONTRATOS_PK;

ALTER TABLE RP_CONTRATOS
 ADD CONSTRAINT RP_CONTRATOS_PK
 PRIMARY KEY
 (VIGENCIA, COD_CON, NRO_RP);

ALTER TABLE RP_CONTRATOS
 ADD CONSTRAINT RP_CONTRATOS_URP
 UNIQUE (NRO_RP, VIGENCIA);

ALTER TABLE RUBROS_CONTRATOS
 ADD CONSTRAINT RUBROS_CONTRATOS_FK_RP 
 FOREIGN KEY (VIGENCIA, COD_CON, NRO_RP) 
 REFERENCES RP_CONTRATOS (VIGENCIA, COD_CON, NRO_RP);